import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Graph {
    public List <String> text = new ArrayList<>();
    public static List <Node> nodes = new ArrayList<>();
    public static List <Edges> egs = new ArrayList<>();
    public static BufferedReader br = null;
    public static final String QUOTE ="\"";
    public static int count = 0;
    public static void main(String [] eggs) throws IOException {
        br = new BufferedReader(new FileReader("C:\\Users\\Root\\Documents\\UNE\\Algoritmia\\grafo.csv"));
        String line = br.readLine();
        while (null!=line){
            String [] fields = line.split(",");

            fields = removeQuotes(fields);


            if(nodes.isEmpty()){
                addNodes(fields);

            }else{
                String[] aux = line.split(",");
                for (int i = 0;i<aux.length; i++){
                    if(aux[i].equals("1")){
                        Edges eg = new Edges();
                        eg.node1 = nodes.get(count);
                        eg.node2 = nodes.get(i);
                        egs.add(eg);
                    }
                }
                count+=1;
            }
            line = br.readLine();

        }
        for (int i = 0; i<egs.size(); i++){
            System.out.println(egs.get(i).toString());
        }
    }
    private static String [] removeQuotes(String[] fields){
        String [] result = new String[fields.length];
        for (int i = 0; i<result.length; i++){
            result[i] = fields[i].replaceAll(QUOTE," ").replaceAll(QUOTE+"$","");
        }
        return result;
    }
    private static void addNodes(String [] text){
        for (int i = 0; i<text.length; i++)   {
            Node n= new Node(text[i]);
            nodes.add(n);
            System.out.println(nodes.get(i));
        }

    }
    private static void addEdges(){

    }
}